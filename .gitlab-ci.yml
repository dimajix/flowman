# You can override the included template(s) by including variable overrides
# See https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#priority-of-environment-variables
include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - build
  - test
  - site

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttp.proxyHost=${http_proxy_host} -Dhttp.proxyPort=${http_proxy_port} -Dhttps.proxyHost=${http_proxy_host} -Dhttps.proxyPort=${http_proxy_port} -Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -XX:ReservedCodeCacheSize=512m"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  # SpotBugs currently doesn't work, maybe because of the custom image
  SAST_EXCLUDED_ANALYZERS: "spotbugs"

image: dimajix/maven-npm:latest

# Cache downloaded dependencies and plugins between builds.
cache:
  key: flowman-${CI_JOB_NAME}
  paths:
    - .m2/repository
    - .npm


# Run security tests
sast:
  stage: test

# Build site and reports
build-site:
  stage: site
  script: 'mvn ${MAVEN_CLI_OPTS} clean install -DskipTests -Ddockerfile.skip && mvn ${MAVEN_CLI_OPTS} site -Ddockerfile.skip'
  artifacts:
    name: "flowman-site"
    paths:
      - target/site
      - flowman-*/target/site
      - flowman-plugins/*/target/site
    expire_in: 5 days


# Default build variant
build-default:
  stage: build
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -Ddockerfile.skip'
  except:
    - pushes
  artifacts:
    name: "flowman-dist-default"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

# List additional build variants (some of them will be built on pushes)
build-hadoop2.6-spark2.3:
  stage: build
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -Phadoop-2.6 -Pspark-2.3 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-hadoop2.6-spark2.3"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

build-hadoop2.6-spark2.4:
  stage: build
  except:
    - pushes
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -Phadoop-2.6 -Pspark-2.4 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-hadoop2.6-spark2.4"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

build-hadoop2.7-spark2.4:
  stage: build
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -Phadoop-2.7 -Pspark-2.4 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-hadoop2.9-spark2.4"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

build-hadoop3.1-spark2.4:
  stage: build
  except:
    - pushes
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -Phadoop-3.1 -Pspark-2.4 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-hadoop3.1-spark2.4"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

build-hadoop2.7-spark3.0:
  stage: build
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -Phadoop-2.7 -Pspark-3.0 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-hadoop2.9-spark3.0"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

build-hadoop3.2-spark3.0:
  stage: build
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -Phadoop-3.2 -Pspark-3.0 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-hadoop3.2-spark3.0"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

build-hadoop2.7-spark3.1:
  stage: build
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -Phadoop-2.7 -Pspark-3.0 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-hadoop3.1-spark3.0"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

build-hadoop3.2-spark3.1:
  stage: build
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -Phadoop-3.2 -Pspark-3.1 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-hadoop3.2-spark3.1"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

build-cdh5.15:
  stage: build
  except:
    - pushes
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -PCDH-5.15 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-cdh5.15"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days

build-cdh6.3:
  stage: build
  script: 'mvn ${MAVEN_CLI_OPTS} clean package -PCDH-6.3 -Ddockerfile.skip'
  artifacts:
    name: "flowman-dist-cdh6.3"
    paths:
      - flowman-dist/target/flowman-dist-*-bin.tar.gz
    expire_in: 5 days
