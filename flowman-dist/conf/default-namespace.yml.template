name: "default"

# The following definition provides a "run history" stored in a database. If nothing else is specified, the database
# is stored locally as a Derby database. If you do not want to use the history, you can simply remove the whole
# 'history' block from this file.
history:
  kind: jdbc
  connection: flowman_state
  retries: 3
  timeout: 1000

# The following connection is used by the history database above.
connections:
  flowman_state:
    driver: $System.getenv('FLOWMAN_HISTORY_DRIVER', 'org.apache.derby.jdbc.EmbeddedDriver')
    url: $System.getenv('FLOWMAN_HISTORY_URL', $String.concat('jdbc:derby:', $System.getenv('FLOWMAN_HOME'), '/flowman-history;create=true'))
    username: $System.getenv('FLOWMAN_HISTORY_USER', '')
    password: $System.getenv('FLOWMAN_HISTORY_PASSWORD', '')


# This adds a hook for creating an execution log in a file
hooks:
  kind: report
  location: ${project.basedir}/generated-report.txt
  metrics:
    # Define common labels for all metrics
    labels:
      project: ${project.name}
    metrics:
      # Collect everything
      - selector:
          name: .*
        labels:
          category: ${category}
          kind: ${kind}
          name: ${name}
      # This metric contains the number of records per output
      - name: output_records
        selector:
          name: target_records
          labels:
            category: target
        labels:
          target: ${name}
      # This metric contains the processing time per output
      - name: output_time
        selector:
          name: target_runtime
          labels:
            category: target
        labels:
          target: ${name}
      # This metric contains the overall processing time
      - name: processing_time
        selector:
          name: job_runtime
          labels:
            category: job


# This configures where metrics should be written to. Since we cannot assume a working Prometheus push gateway, we
# simply print them onto the console
metrics:
  - kind: console
  # Optionally add a JDBC metric sink
  #- kind: jdbc
  #  labels:
  #    project: ${project.name}
  #    version: ${project.version}
  #  connection:
  #    kind: jdbc
  #    url: jdbc:sqlserver://localhost:1433;databaseName=flowman_metrics
  #    driver: "com.microsoft.sqlserver.jdbc.SQLServerDriver"
  #    username: "sa"
  #    password: "yourStrong(!)Password"


# This section contains global configuration properties. These still can be overwritten within projects or profiles
config:
  - spark.sql.warehouse.dir=$System.getenv('FLOWMAN_HOME')/hive/warehouse
  - spark.hadoop.hive.metastore.uris=
  - spark.hadoop.javax.jdo.option.ConnectionURL=jdbc:derby:;databaseName=$System.getenv('FLOWMAN_HOME')/hive/db;create=true
  - spark.hadoop.datanucleus.rdbms.datastoreAdapterClassName=org.datanucleus.store.rdbms.adapter.DerbyAdapter


# This section enables plugins. You may want to remove plugins which are of no use for you.
plugins:
  - flowman-aws
  - flowman-azure
  - flowman-kafka
  - flowman-mariadb
  - flowman-mysql
  - flowman-mssqlserver
  - flowman-postgresql
  - flowman-swagger
  - flowman-openapi
  - flowman-json
  - flowman-delta


# The 'store' defines how Flowman can reference entities in different projects.
store:
  kind: file
  location: $System.getenv('FLOWMAN_HOME')/examples
